{"version":3,"sources":["./src/app/Constants/constants.ts","./src/app/default/default.routing.ts","./src/app/default/default.module.ts","./src/app/default/default.component.ts","./src/app/default/default.component.html","./src/app/default/adapter-tabs/adapter-tabs.component.ts","./src/app/default/adapter-tabs/adapter-tabs.component.html","./src/app/default/adapters-table/adapters-table.component.ts"],"names":[],"mappings":"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","file":"default-default-module.js","sourcesContent":["export enum TABS { GENERAL, DIAGNOSTICS, TEAMING, VLANS }","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DefaultComponent } from './default.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DefaultComponent,\r\n        // if the component has child components that need to be routed to, include them in the children array.\r\n        children: [\r\n            {\r\n                path: '',\r\n                redirectTo: 'base',\r\n                pathMatch: 'full'\r\n            }\r\n        ]\r\n}];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class Routing { }\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    ActionsModule, DataTableModule, DetailsModule, MasterViewModule,\r\n    SmeFormsModule, SplitViewModule, TooltipModule\r\n} from '@microsoft/windows-admin-center-sdk/angular';\r\nimport { Routing } from './default.routing';\r\n\r\nimport { AdapterTabsComponent } from './adapter-tabs/adapter-tabs.component';\r\nimport { AdaptersTableComponent } from './adapters-table/adapters-table.component';\r\nimport { DefaultComponent } from './default.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        Routing,\r\n        SmeFormsModule,\r\n        TooltipModule,\r\n        ActionsModule,\r\n        SplitViewModule,\r\n        DetailsModule,\r\n        MasterViewModule,\r\n        DataTableModule,\r\n    ],\r\n    declarations: [\r\n        DefaultComponent,\r\n        AdaptersTableComponent,\r\n        AdapterTabsComponent,\r\n    ]\r\n})\r\n\r\nexport class DefaultModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AppContextService } from '@microsoft/windows-admin-center-sdk/angular';\r\nimport { Adapter } from '../models/adapter.model';\r\nimport { DefaultService } from './default.service';\r\n\r\n\r\n@Component({\r\n    selector: 'default-component',\r\n    templateUrl: './default.component.html',\r\n    styleUrls: ['./default.component.css']\r\n})\r\nexport class DefaultComponent implements OnDestroy, OnInit {\r\n    m_strComputerName: string;\r\n    adapterSelected: boolean;\r\n    adapterColumns = [{ header: 'Name', field: 'name' }, { header: 'Status', field: 'status' }];\r\n    adapters: Adapter[];\r\n    showAdapterTabs = false;\r\n    selectedAdapter: any = {};\r\n\r\n    public active = false;\r\n    public groupActive = false;\r\n    public selection = null;\r\n    public masterView: any = { searchable: false, header: null };\r\n    constructor(\r\n        private appContextService: AppContextService,\r\n        private defaultService: DefaultService) {\r\n    }\r\n\r\n    public static helloWorld() {\r\n        return 'Hello world!';\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        const session = this.appContextService.powerShell.createAutomaticSession(this.appContextService.activeConnection.nodeName);\r\n        this.getComputerName();\r\n        this.GetEthernetAdapterList();\r\n    }\r\n\r\n    public getComputerName(): void {\r\n        this.defaultService.Get_ComputerName_ps1().subscribe(\r\n            response => {\r\n                this.m_strComputerName = response;\r\n            }\r\n        );\r\n    }\r\n\r\n    GetEthernetAdapterList() {\r\n        this.defaultService.Get_Adapters_ps1().subscribe(\r\n            list => {\r\n                this.adapters = list;\r\n            }\r\n        );\r\n    }\r\n\r\n    rowClicked() {\r\n        this.showAdapterTabs = true;\r\n        this.selectedAdapter = this.selection;\r\n    }\r\n\r\n    public alert(arg: string) {\r\n        alert(arg);\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.defaultService.m_session.dispose();\r\n    }\r\n}\r\n","<sme-split-view class=\"sme-layout-absolute sme-position-inset-none\" #sv>\r\n  <sme-split-view-pane>\r\n    <sme-details [header]=\"showAdapterTabs ? selectedAdapter.name : 'Properties'\" [(isExpanded)]=\"sv.isExpanded\">\r\n      <div class=\"sme-documentation\">\r\n        <ng-container *ngIf=\"!showAdapterTabs\">\r\n          Select a device to learn about it\r\n        </ng-container>\r\n        <ng-container *ngIf=\"showAdapterTabs\">\r\n          <adapter-tabs [adapterDetails]=\"selectedAdapter\" [adapterSelected]=\"showAdapterTabs\">\r\n          </adapter-tabs>\r\n        </ng-container>\r\n      </div>\r\n    </sme-details>\r\n  </sme-split-view-pane>\r\n\r\n  <sme-split-view-content>\r\n    <sme-master-view [header]=\"m_strComputerName\" [showGroup]=\"true\" [total]=\"smeDataTable.renderedItems.length\"\r\n      [selection]=\"selection\" [filterActive]=\"active\" [groupActive]=\"groupActive\"\r\n      (clearSelection)=\"smeDataTable.clearSelection()\" (refresh)=\"alert('refreshed')\"\r\n      (filter)=\"active = !active; alert('filter active: ' + active)\"\r\n      (group)=\"groupActive = !groupActive; alert('group active: ' + groupActive)\" (clearSelection)=\"selection=null\">\r\n      <!-- <h1>Something</h1> -->\r\n      <sme-action-bar #actionBar>\r\n        <sme-action-button #action [text]=\"'Toggle Search'\" (execute)=\"masterView.searchable = !masterView.searchable\">\r\n        </sme-action-button>\r\n        <sme-action-button #action [text]=\"'Toggle Header'\"\r\n          (execute)=\"masterView.header = masterView.header ? '' : 'Header' \"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder1'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder2'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder3'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder4'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder5'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder6'\"></sme-action-button>\r\n        <sme-action-button #action [text]=\"'Placeholder7'\"></sme-action-button>\r\n      </sme-action-bar>\r\n\r\n      <sme-data-table #smeDataTable (onRowSelect)=\"rowClicked()\" [items]=\"adapters\" [(selection)]=\"selection\">\r\n        <ng-container *ngFor=\"let column of adapterColumns\">\r\n          <sme-data-table-column [field]=\"column.field\" [header]=\"column.header\" sortable=\"true\">\r\n          </sme-data-table-column>\r\n        </ng-container>\r\n      </sme-data-table>\r\n    </sme-master-view>\r\n  </sme-split-view-content>\r\n</sme-split-view>","import { Component, Input } from '@angular/core';\nimport { TABS } from 'src/app/Constants/constants';\n\n@Component({\n    selector: 'adapter-tabs',\n    templateUrl: 'adapter-tabs.component.html',\n    styleUrls: ['adapter-tabs.component.css']\n})\nexport class AdapterTabsComponent {\n    @Input() set adapterDetails(selectedAdapter: any) {\n        this.getterData(selectedAdapter);\n    }\n    selected = false;\n    Tab = TABS;\n    selectedAdapterName: string;\n    selectedAdapterDetails: any = {};\n    activeTab = this.Tab.GENERAL;\n    @Input() adapterSelected = false;\n\n    clicked(): void {\n        this.selected = !this.selected;\n    }\n\n    styleTab(value: number): Object {\n        if (this.activeTab === value) {\n            return { background: '#0071c5', color: 'white' };\n        }\n        return {};\n    }\n\n    activateTab(tabId: number) {\n        this.activeTab = tabId;\n    }\n\n    getterData(row): void {\n        this.selectedAdapterName = row.name;\n        this.selectedAdapterDetails = {\n            busType: row.busTypeString,\n            driverName: ' ',\n            driverVersion: row.driverVersion,\n            eTrackId: row.eTrackID,\n            location: row.location,\n            mediaType: row.mediaTypeString,\n            negotiatedLinkSpeed: row.negotiatedLinkSpeed,\n            negotiatedLinkWidth: row.negotiatedLinkWidth,\n            partNumber: row.partNumber,\n            permanentEthernetAddress: row.permanentAddress\n        };\n\n        // Auto-select the general tab\n        this.activateTab(this.Tab.DIAGNOSTICS);\n    }\n}\n\n","<div *ngIf=\"adapterSelected\">\n    <div class=\"sme-layout-relative\">\n        <div class=\"tabs-container\" style=\"display:flex\">\n            <div class=\"tab\" style=\"padding: 8px 50px;\" [ngStyle]=\"styleTab(this.Tab.DIAGNOSTICS)\"\n                (click)=\"activateTab(this.Tab.DIAGNOSTICS)\">General</div>\n            <div class=\"tab\" style=\"padding: 8px 50px;\" (click)=\"activateTab(this.Tab.TEAMING)\">Home\n            </div>\n            <div class=\"tab\" style=\"padding: 8px 50px;\" (click)=\"activateTab(this.Tab.VLANS)\">Connection\n            </div>\n        </div>\n    </div>\n\n    <div class=\"general-tab\" style=\"padding:30px\" *ngIf=\"activeTab ===  this.Tab.DIAGNOSTICS\">\n        <div style=\"display:flex;padding-bottom:20px\">\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Bus Type</strong>\n                <small>{{this.selectedAdapterDetails.busType}}</small>\n            </div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Driver Name</strong>\n                <small>{{this.selectedAdapterDetails.driverName}}</small>\n            </div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Driver Version</strong>\n                <small>{{this.selectedAdapterDetails.driverVersion}}</small></div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>ETrackID</strong>\n                <small>{{this.selectedAdapterDetails.eTrackId}}</small></div>\n            <div style=\"flex:2;display:flex;flex-direction:column\">\n                <strong>Location</strong>\n                <small>{{this.selectedAdapterDetails.location}}</small>\n            </div>\n        </div>\n        <div style=\"display:flex;padding-bottom:20px\">\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Media Type</strong>\n                <small>{{this.selectedAdapterDetails.mediaType}}</small>\n            </div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Negotiated Link Speed</strong>\n                <small>{{this.selectedAdapterDetails.negotiatedLinkSpeed}}</small>\n            </div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Negotiated Link Width</strong>\n                <small>{{this.selectedAdapterDetails.negotiatedLinkWidth}}</small></div>\n            <div style=\"flex:1;display:flex;flex-direction:column\">\n                <strong>Part Number</strong>\n                <small>{{this.selectedAdapterDetails.partNumber}}</small></div>\n            <div style=\"flex:2;display:flex;flex-direction:column\">\n                <strong>Permanent Ethernet Address</strong>\n                <small>{{this.selectedAdapterDetails.permanentEthernetAddress}}</small>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\nimport { NavigationTitle } from '@microsoft/windows-admin-center-sdk/angular';\nimport { Strings } from '../../../generated/strings';\n@Component({\n    selector: 'adapters-table',\n    templateUrl: './adapters-table.component.html'\n})\nexport class AdaptersTableComponent {\n    public strings: Strings;\n    public searchString = '';\n\n    public groupByOptions = [\n        { displayName: 'Option 1', field: 'field 1' },\n        { displayName: 'Option 2', field: 'field 2' },\n        { displayName: 'Option 3', field: 'field 3' },\n        { displayName: 'Some other thing', field: 'field 4' }\n    ];\n\n    public active = false;\n    public groupActive = false;\n    public items = [];\n\n    public selection = null;\n\n    public masterView: any = { searchable: false, header: null };\n\n    constructor() {\n        this.strings = MsftSme.getStrings();\n        for (let i = 0; i < 500; i++) {\n            this.items.push({ name: i, displayName: 'Item ' + i });\n        }\n    }\n\n    public alert(arg: string) {\n        alert(arg);\n    }\n\n    public onDropdownChange(field: string) {\n        this.alert(field);\n    }\n\n    public convertForCustomColumn(name: number): string {\n        return 'Converted Value: ' + name * 1.3;\n    }\n}"],"sourceRoot":"webpack:///"}